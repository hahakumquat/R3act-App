{"version":3,"sources":["../../../../src/basic/Tabs/DefaultTabBar.js"],"names":["ReactNative","require","StyleSheet","View","Animated","Platform","ViewPropTypes","Button","DefaultTabBar","createClass","propTypes","goToPage","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","tabStyle","style","renderTab","underlineStyle","contextTypes","theme","object","getDefaultProps","topTabBarActiveTextColor","topTabBarTextColor","renderTabOption","name","page","isTabActive","onPressHandler","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","headerContent","props","children","undefined","textColor","fontWeight","flex","random","render","variables","context","platformStyle","containerWidth","numberOfTabs","length","tabUnderlineStyle","position","width","height","topTabBarActiveBorderColor","bottom","left","scrollValue","interpolate","inputRange","outputRange","map","StyledTab","mapPropsToStyleNames"],"mappings":"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","file":"DefaultTabBar.js","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nconst ReactNative = require(\"react-native\");\nimport { connectStyle, StyleProvider } from \"native-base-shoutem-theme\";\nimport variable from \"./../../theme/variables/platform\";\nimport { TabHeading, Text, TabContainer } from \"./../../index\";\nimport _ from \"lodash\";\n\nconst { StyleSheet, View, Animated, Platform, ViewPropTypes } = ReactNative;\nconst Button = require(\"./Button\");\n\nconst DefaultTabBar = React.createClass({\n  propTypes: {\n    goToPage: PropTypes.func,\n    activeTab: PropTypes.number,\n    tabs: PropTypes.array,\n    backgroundColor: PropTypes.string,\n    activeTextColor: PropTypes.string,\n    inactiveTextColor: PropTypes.string,\n    tabStyle: ViewPropTypes.style,\n    renderTab: PropTypes.func,\n    underlineStyle: ViewPropTypes.style\n  },\n  contextTypes: {\n    theme: PropTypes.object\n  },\n\n  getDefaultProps() {\n    return {\n      activeTextColor: variable.topTabBarActiveTextColor,\n      inactiveTextColor: variable.topTabBarTextColor,\n      backgroundColor: null\n    };\n  },\n\n  renderTabOption(name, page) {},\n\n  renderTab(\n    name,\n    page,\n    isTabActive,\n    onPressHandler,\n    tabStyle,\n    activeTabStyle,\n    textStyle,\n    activeTextStyle,\n    tabHeaderStyle\n  ) {\n    const headerContent =\n      typeof name !== \"string\" ? name.props.children : undefined;\n    const { activeTextColor, inactiveTextColor } = this.props;\n    const textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    const fontWeight = isTabActive ? \"bold\" : \"normal\";\n    if (typeof name === \"string\") {\n      return (\n        <Button\n          style={{ flex: 1 }}\n          key={name}\n          onPress={() => onPressHandler(page)}\n        >\n          <TabHeading\n            style={isTabActive ? activeTabStyle : tabStyle}\n            active={isTabActive}\n          >\n            <Text style={isTabActive ? activeTextStyle : textStyle}>\n              {name}\n            </Text>\n          </TabHeading>\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          style={{ flex: 1 }}\n          key={_.random(1.2, 5.2)}\n          onPress={() => onPressHandler(page)}\n        >\n          <TabHeading style={tabHeaderStyle} active={isTabActive}>\n            {headerContent}\n          </TabHeading>\n        </Button>\n      );\n    }\n  },\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n      : variable;\n    const platformStyle = variables.platformStyle;\n    const containerWidth = this.props.containerWidth;\n    const numberOfTabs = this.props.tabs.length;\n    const tabUnderlineStyle = {\n      position: \"absolute\",\n      width: containerWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n\n    const left = this.props.scrollValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, containerWidth / numberOfTabs]\n    });\n    return (\n      <TabContainer>\n        {this.props.tabs.map((name, page) => {\n          const isTabActive = this.props.activeTab === page;\n          const renderTab = this.props.renderTab || this.renderTab;\n          return renderTab(\n            name,\n            page,\n            isTabActive,\n            this.props.goToPage,\n            this.props.tabStyle[page],\n            this.props.activeTabStyle[page],\n            this.props.textStyle[page],\n            this.props.activeTextStyle[page],\n            this.props.tabHeaderStyle[page]\n          );\n        })}\n        <Animated.View\n          style={[tabUnderlineStyle, { left }, this.props.underlineStyle]}\n        />\n      </TabContainer>\n    );\n  }\n});\n\n// module.exports = DefaultTabBar;\nconst StyledTab = connectStyle(\n  \"NativeBase.DefaultTabBar\",\n  {},\n  mapPropsToStyleNames\n)(DefaultTabBar);\nexport { StyledTab as DefaultTabBar };\n"]}