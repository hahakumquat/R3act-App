{"version":3,"sources":["../../../src/basic/H1.js"],"names":["H1","_root","c","props","childrenType","propName","component","error","prop","Children","forEach","child","Error","propTypes","children","style","oneOfType","object","number","array","StyledH1"],"mappings":"+0BAAA,4B;AACA;;AAEA;AACA,mE;;AAEMA,E;AACK;AACP,MAAO,2DAAM,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EAAX,EAAsC,KAAKC,KAA3C,kDAAP;AACD,C;;;AAGH,GAAMC,cAAe,QAAfA,aAAe,CAASD,KAAT,CAAgBE,QAAhB,CAA0BC,SAA1B,CAAqC;AACxD,GAAIC,aAAJ;AACA,GAAMC,MAAOL,MAAME,QAAN,CAAb;AACA,gBAAMI,QAAN,CAAeC,OAAf,CAAuBF,IAAvB,CAA6B,eAAS;AACpC,GAAI,MAAOG,MAAP,GAAiB,QAArB,CAA+B;AAC7BJ,MAAQ,GAAIK,MAAJ,CAAaN,SAAb,4BAAR;AACD;AACF,CAJD;AAKA,MAAOC,MAAP;AACD,CATD;;AAWAP,GAAGa,SAAH;AACK,kBAAKA,SADV;AAEEC,SAAUV,YAFZ;AAGEW,MAAO,iBAAUC,SAAV,CAAoB;AACzB,iBAAUC,MADe;AAEzB,iBAAUC,MAFe;AAGzB,iBAAUC,KAHe,CAApB,CAHT;;;;AAUA,GAAMC,UAAW,yCAAa,eAAb,CAA8B,EAA9B,iCAAwDpB,EAAxD,CAAjB,C;;AAEqBA,E,CAAZoB,Q","file":"H1.js","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport { Text } from \"react-native\";\n\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\n\nclass H1 extends Component {\n  render() {\n    return <Text ref={c => (this._root = c)} {...this.props} />;\n  }\n}\n\nconst childrenType = function(props, propName, component) {\n  let error;\n  const prop = props[propName];\n  React.Children.forEach(prop, child => {\n    if (typeof child !== \"string\") {\n      error = new Error(`${component} should have only string`);\n    }\n  });\n  return error;\n};\n\nH1.propTypes = {\n  ...Text.propTypes,\n  children: childrenType,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ])\n};\n\nconst StyledH1 = connectStyle(\"NativeBase.H1\", {}, mapPropsToStyleNames)(H1);\n\nexport { StyledH1 as H1 };\n"]}